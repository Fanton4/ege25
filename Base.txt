Маски
Для решения данного подтипа в Python используется библиотека Fnmatch
Что бы его ввести используем команду from fnmacth import fnmatch .
Сама команда работает так:
                          fnmatch(str,mask)
Где str-строка которую надо проверить на подобие, a mask-маска на которую надо проверять.
Так же для проверки используется перебор с оптимизацией.
Разберём ДЕМО 2023 Года:
Назовём маской числа последовательность цифр, в которой также могут
встречаться следующие символы:
– символ «?» означает ровно одну произвольную цифру;
– символ «*» означает любую последовательность цифр произвольной
длины; в том числе «*» может задавать и пустую последовательность.
Например, маске 123*4?5 соответствуют числа 123405 и 12300405.
Среди натуральных чисел, не превышающих 10 10, найдите все числа,
соответствующие маске 1?2139*4, делящиеся на 2023 без остатка.
В ответе запишите в первом столбце таблицы все найденные числа
в порядке возрастания, а во втором столбце – соответствующие им
результаты деления этих чисел на 2023.
Количество строк в таблице для ответа избыточно.
import fnmatch
for i in range(10**10+1):
  if fnmatch(str(i),'1?2139*4') and i%2023==0:
    print(i,i//2023)
